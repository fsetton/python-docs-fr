# Copyright (C) 2001-2018, Python Software Foundation
# For licence information, see README file.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-11-15 18:54+0100\n"
"PO-Revision-Date: 2020-05-10 15:10+0200\n"
"Language-Team: FRENCH <traductions@lists.afpy.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Last-Translator: \n"
"X-Generator: Poedit 2.2.1\n"

#: ../Doc/c-api/conversion.rst:6
msgid "String conversion and formatting"
msgstr "Conversion et formatage de chaînes"

#: ../Doc/c-api/conversion.rst:8
msgid "Functions for number conversion and formatted string output."
msgstr ""
"Fonctions de conversion pour les nombres et pour la sortie des chaînes "
"formatées."

#: ../Doc/c-api/conversion.rst:13
msgid ""
"Output not more than *size* bytes to *str* according to the format string "
"*format* and the extra arguments. See the Unix man page :manpage:"
"`snprintf(2)`."
msgstr ""
"Écrit au plus *size* octets à *str* selon la format de chaîne "
"*format* et les arguments supplémentaires. Voir la page de manuel Unix :"
"manpage:`snprintf (2)`."

#: ../Doc/c-api/conversion.rst:19
msgid ""
"Output not more than *size* bytes to *str* according to the format string "
"*format* and the variable argument list *va*. Unix man page :manpage:"
"`vsnprintf(2)`."
msgstr ""
"Sortie pas plus de *taille* octets vers *str* selon la format de chaîne "
"*format* et la liste d'arguments variables *va*. Page de manuel Unix :"
"manpage:`vsnprintf(2)`."

#: ../Doc/c-api/conversion.rst:23
msgid ""
":c:func:`PyOS_snprintf` and :c:func:`PyOS_vsnprintf` wrap the Standard C "
"library functions :c:func:`snprintf` and :c:func:`vsnprintf`. Their purpose "
"is to guarantee consistent behavior in corner cases, which the Standard C "
"functions do not."
msgstr ""
":c:func:`PyOS_snprintf` et :c:func:`PyOS_vsnprintf` encapsule les fonctions "
"de la bibliothèque C standard :c:func:`snprintf` et :c:func:` vsnprintf`. "
"Leur objectif est de garantir un comportement cohérent dans les cas rares, "
"ce que les fonctions Standard C ne font pas."

#: ../Doc/c-api/conversion.rst:28
msgid ""
"The wrappers ensure that *str*[*size*-1] is always ``'\\0'`` upon return. "
"They never write more than *size* bytes (including the trailing ``'\\0'``) "
"into str. Both functions require that ``str != NULL``, ``size > 0`` and "
"``format != NULL``."
msgstr ""
"Les bandes garantissent que *str* [*size* -1] est toujours ``'\\0'`` lors du "
"retour. Ils n'écrivent jamais plus de *size* octets (y compris les derniers "
"``'\\0'``) dans str. Les deux fonctions nécessitent que ``str ! = NULL``, "
"``size> 0`` et `` format! = NULL``."

#: ../Doc/c-api/conversion.rst:33
msgid ""
"If the platform doesn't have :c:func:`vsnprintf` and the buffer size needed "
"to avoid truncation exceeds *size* by more than 512 bytes, Python aborts "
"with a :c:func:`Py_FatalError`."
msgstr ""
"Si la plate-forme n'a pas :c:func:`vsnprintf` et que la taille du tampon "
"nécessaire pour éviter la troncature dépasse *taille* de plus de 512 octets, "
"Python abandonne avec a: c:func:`Py_FatalError`."

#: ../Doc/c-api/conversion.rst:37
msgid ""
"The return value (*rv*) for these functions should be interpreted as follows:"
msgstr ""
"La valeur de retour (*rv*) pour ces fonctions doit être interprétée comme "
"suit:"

#: ../Doc/c-api/conversion.rst:39
msgid ""
"When ``0 <= rv < size``, the output conversion was successful and *rv* "
"characters were written to *str* (excluding the trailing ``'\\0'`` byte at "
"*str*[*rv*])."
msgstr ""
"Lorsque ``0 <= rv < size``, la conversion de la sortie a réussi et les "
"caractères *rv* ont été écrits dans *str* (à l'exclusion de l'octet de fin "
"``'\\0'`` 'à *str*[*rv*])."

#: ../Doc/c-api/conversion.rst:43
msgid ""
"When ``rv >= size``, the output conversion was truncated and a buffer with "
"``rv + 1`` bytes would have been needed to succeed. *str*[*size*-1] is "
"``'\\0'`` in this case."
msgstr ""
"Lorsque ``rv>=size``, la conversion de la sortie était tronquée et un tampon "
"avec ``rv + 1`` octets aurait été nécessaire pour réussir. *str* [*size*1] "
"dans ce cas ``'\\0'``."

#: ../Doc/c-api/conversion.rst:47
msgid ""
"When ``rv < 0``, \"something bad happened.\" *str*[*size*-1] is ``'\\0'`` in "
"this case too, but the rest of *str* is undefined. The exact cause of the "
"error depends on the underlying platform."
msgstr ""
"Lorsque ``rv <0``, \"une erreur s'est produite\" *str* [*size*-1] est "
"également ``'\\0'`` dans ce cas, mais le reste de *str* n'est pas défini. La "
"cause exacte de l'erreur dépend de la plate-forme sous-jacente."

#: ../Doc/c-api/conversion.rst:51
msgid ""
"The following functions provide locale-independent string to number "
"conversions."
msgstr ""
"Les fonctions suivantes fournissent une chaîne localement indépendante pour "
"les conversions de nombres."

#: ../Doc/c-api/conversion.rst:56
msgid ""
"Convert a string ``s`` to a :c:type:`double`, raising a Python exception on "
"failure.  The set of accepted strings corresponds to the set of strings "
"accepted by Python's :func:`float` constructor, except that ``s`` must not "
"have leading or trailing whitespace. The conversion is independent of the "
"current locale."
msgstr ""
"Convertis une chaîne ``s`` en a:c:type:`double`, ce qui déclenche une "
"exception Python en cas d'échec. L'ensemble des chaînes acceptées correspond "
"à l'ensemble des chaînes acceptées par le constructeur Python :func:`float`, "
"sauf que``s`` ne doit pas avoir d'espace au début ou à la fin. La conversion "
"est indépendante des paramètres locaux actuels."

#: ../Doc/c-api/conversion.rst:62
msgid ""
"If ``endptr`` is ``NULL``, convert the whole string.  Raise :exc:"
"`ValueError` and return ``-1.0`` if the string is not a valid representation "
"of a floating-point number."
msgstr ""
"Si ``endptr`` est ``NULL``, convertis la chaîne entière.  Raise :exc:"
"`ValueError` et retourne ``-1.0`` si la chaîne n'est pas une représentation "
"valide d'un nombre flottant à virgule."

#: ../Doc/c-api/conversion.rst:66
msgid ""
"If endptr is not ``NULL``, convert as much of the string as possible and set "
"``*endptr`` to point to the first unconverted character.  If no initial "
"segment of the string is the valid representation of a floating-point "
"number, set ``*endptr`` to point to the beginning of the string, raise "
"ValueError, and return ``-1.0``."
msgstr ""
"Si endptr n'est pas ``NULL``, convertis autant de chaîne que possible et "
"définis ``*endptr`` pour pointer vers le premier caractère non converti. Si "
"aucun segment initial de la chaîne n'est la représentation valide d'un "
"nombre flottant à virgule, définissez ``* endptr`` pour pointer vers le "
"début de la chaîne, augmentez ValueError et retournez ``-1,0``."

#: ../Doc/c-api/conversion.rst:73
msgid ""
"If ``s`` represents a value that is too large to store in a float (for "
"example, ``\"1e500\"`` is such a string on many platforms) then if "
"``overflow_exception`` is ``NULL`` return ``Py_HUGE_VAL`` (with an "
"appropriate sign) and don't set any exception.  Otherwise, "
"``overflow_exception`` must point to a Python exception object; raise that "
"exception and return ``-1.0``.  In both cases, set ``*endptr`` to point to "
"the first character after the converted value."
msgstr ""
"Si ``s`` représente une valeur trop grande pour être stockée dans un "
"flottant (par exemple, ``\"1e500\"`` est un exemple de cette chaîne sur de "
"nombreuses plates-formes), alors si ``overflow_exception`` est ``NULL`` "
"retourne ``Py_HUGE_VAL`` (avec un signe approprié) et ne définis aucune "
"exception. Sinon, ``overflow_exception`` doit pointer vers un objet "
"d'exception Python; lève cette exception et retourne ``-1.0``. Dans les deux "
"cas, définis ``*endptr`` pour pointer vers le premier caractère après la "
"valeur convertie."

#: ../Doc/c-api/conversion.rst:81
msgid ""
"If any other error occurs during the conversion (for example an out-of-"
"memory error), set the appropriate Python exception and return ``-1.0``."
msgstr ""
"Si une autre erreur se produit pendant la conversion (par exemple une erreur "
"de mémoire insuffisante), définis l'exception Python appropriée et retourne "
"``-1,0``."

#: ../Doc/c-api/conversion.rst:90
msgid ""
"Convert a :c:type:`double` *val* to a string using supplied *format_code*, "
"*precision*, and *flags*."
msgstr ""
"Convertis une :c:type:`double` *val* en une chaîne en utilisant les "
"*format_code*, *precision* et *flags* fournis."

#: ../Doc/c-api/conversion.rst:93
msgid ""
"*format_code* must be one of ``'e'``, ``'E'``, ``'f'``, ``'F'``, ``'g'``, "
"``'G'`` or ``'r'``.  For ``'r'``, the supplied *precision* must be 0 and is "
"ignored.  The ``'r'`` format code specifies the standard :func:`repr` format."
msgstr ""
"*format_code* doit être l'une des valeurs suivantes ``'e'``, ``'E'``, "
"``'f'``, ``'F'``, ``'g'``, ``'G'`` ou ``'r'``. Pour ``'r'``, la *precision* "
"fournie doit être 0 et est ignorée. Le code de format ``'r'``spécifie le "
"format standard :func:`repr`."

#: ../Doc/c-api/conversion.rst:98
msgid ""
"*flags* can be zero or more of the values ``Py_DTSF_SIGN``, "
"``Py_DTSF_ADD_DOT_0``, or ``Py_DTSF_ALT``, or-ed together:"
msgstr ""
"*flags* peut être zéro ou plusieurs des valeurs suivantes ``Py_DTSF_SIGN``, "
"``Py_DTSF_ADD_DOT_0``, ou `` Py_DTSF_ALT``, ou-ed prises ensemble:"

#: ../Doc/c-api/conversion.rst:101
msgid ""
"``Py_DTSF_SIGN`` means to always precede the returned string with a sign "
"character, even if *val* is non-negative."
msgstr ""
"``Py_DTSF_SIGN`` dois toujours précéder la chaîne renvoyée avec un caractère "
"de signe, même si *val* n'est pas négatif."

#: ../Doc/c-api/conversion.rst:104
msgid ""
"``Py_DTSF_ADD_DOT_0`` means to ensure that the returned string will not look "
"like an integer."
msgstr ""
"``Py_DTSF_ADD_DOT_0`` signifie que la chaîne retournée n'aura pas la forme "
"d'un entier."

#: ../Doc/c-api/conversion.rst:107
msgid ""
"``Py_DTSF_ALT`` means to apply \"alternate\" formatting rules.  See the "
"documentation for the :c:func:`PyOS_snprintf` ``'#'`` specifier for details."
msgstr ""
"``Py_DTSF_ALT`` signifie appliquer des règles de formatage \"alternatives\". "
"Consultez la documentation du spécificateur :c:func:`PyOS_snprintf` ``'#'`` "
"pour plus de détails."

#: ../Doc/c-api/conversion.rst:111
msgid ""
"If *ptype* is non-``NULL``, then the value it points to will be set to one "
"of ``Py_DTST_FINITE``, ``Py_DTST_INFINITE``, or ``Py_DTST_NAN``, signifying "
"that *val* is a finite number, an infinite number, or not a number, "
"respectively."
msgstr ""
"Si *ptype* n'est pas ``NULL``, alors la valeur vers laquelle il pointe sera "
"définie sur ``Py_DTST_FINITE``, ``Py_DTST_INFINITE`` ou `` Py_DTST_NAN``, ce "
"qui signifie que *val* est un nombre fini, un nombre infini ou n'est pas un "
"nombre, respectivement."

#: ../Doc/c-api/conversion.rst:115
msgid ""
"The return value is a pointer to *buffer* with the converted string or "
"``NULL`` if the conversion failed. The caller is responsible for freeing the "
"returned string by calling :c:func:`PyMem_Free`."
msgstr ""
"La valeur de retour est un pointeur vers *buffer* avec la chaîne convertie "
"ou ``NULL`` si la conversion a échoué. L'utilisateur est responsable de la "
"libération de la chaîne renvoyée en appelant: c:func:`PyMem_Free`."

#: ../Doc/c-api/conversion.rst:124
msgid ""
"Case insensitive comparison of strings. The function works almost "
"identically to :c:func:`strcmp` except that it ignores the case."
msgstr ""
"Comparaison des chaînes insensibles à la casse. La fonction marche presque à "
"l'identique pour :c:func:`strcmp` sauf qu'elle ignore la casse."

#: ../Doc/c-api/conversion.rst:130
msgid ""
"Case insensitive comparison of strings. The function works almost "
"identically to :c:func:`strncmp` except that it ignores the case."
msgstr ""
"Comparaison des chaînes insensibles à la casse. La fonction marche presque à "
"l'identique pour :c:func:`strncmp` sauf qu'elle ignore la casse."
